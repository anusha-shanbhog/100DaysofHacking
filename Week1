DAY1:

OvertheWire Bandit challenges 1-20:

sudo su root to give root privileges

//ssh
ssh bandit01@bandit.labs.overthewire.org -p 2220
ssh bandit01@bandit.labs.overthewire.org -p 2220 cat readme //u can type like this also if it doesnt allow u to login but u want to access stuff
exit to exit from ssh
ctrl + c to terminate process

//basic commands
ls, cat, cd, cat ./-, cat 'file with spaces in name', ls -a
find -readable -nc -owner bandit6 -group bandit7
cp and mv to copy and move files
echo is to print 

//piping
cat data.txt | grep "millionth" >> newfile.txt  //output is redirected to newfile
cat data.txt | sort | uniq -u
strings data.txt | grep ===  //for human readable form strings is used

//decoding basics
cat data.txt base64 -d //base64 decoding  -e =>encoding
alias rot13="tr 'A-Za-z' 'N-ZA-Mn-za-m'"
cat data.txt | rot13

//scp, netcat and ssl
scp->to transfer data over ssh
scp -P 2220 bandit13@bandit.labs.overthewire.org:sshkey.private .   
ssh -i sshkey.private bandit14@bandit.labs.overthewire.org -p 2220  //to login using private ssh key into ssh
chmod 700 sshkey.private makes sure onli users have permission
ls -l filename tells abt permissions

netcat or nc is used to read or write data over a network
nc localhost 30000

ssl is for secure communication over networks
echo JQttfApK4SeyHwDlI9SXGR50qclOAil1 | openssl s_client -ign_eof -connect localhost:31790

//port scanning
nmap: to see which ports are open by default scans top 1000 ports
nmap -sV localhost -p 31000-32000
-p is which port or range -sV is for version and service detection -p- -A is to scan all ports 
will take time..here we are finding which ssl port can send back password

//difference in two files
diff file1 file2

DAY2:

Revised concepts that I had learnt in TCM Security PEH course:

Networking, addresses, OSI Model, protocols, Subnetting
Intro to python: basic printing, variables, functions, operators and expressions, list, tuple, dictionaries, loops, importing modules
Sockets, building basic port scanner
Basic Linux commands: sudo, mmkdir, rmdir, cd, ls, echo, cp, rm, mv, users and privileges, changing permissions, network commands, cat, nano, installing and updating tools
Bash scripting very basic program
5 stages of Ethical Hacking: Info gathering, Scanning and Enumeration, Exploitation, Maintaining Access, Covering Tracks

Info Gathering steps:
Passive Reconnaissance Overview
Identifying Target
Discovering emails
Gathering Breached Credentials
Hunting Breached Credentials with Dehashed
Hunting Subdomains
Identifying website tech

DAY3:

netcat or nc 
-l is needed to create a listener on server
-p to speify port 
& operator to run command in background
-n to avoid new line stuff
echo -n 'GbKksEFF4yrVs6il55v6gwY5aVje5f0j' | nc -l -p 1234 & //this sends the passwd to listener on localhost port 1234 and it compares with passwd of prev lvl ,
if right it send new passwd ..  type.. ./suconnect 1234

cron is a time based job scheduler that executes commands at regular intervals chack config in /etc/cron.d
ls -la /etc/cron.d
go to bandit 22 bash script open it using cat /usr/bin/cronjob_bandit22.sh and execute those commands

bash files end with .sh and are always stored in /usr/bin/filename
mktemp -d makes temporary directory

stuck!:( in level 24

PicoCTFs
wget http link to get files from net
./filename -h works sometimes instead of doing cat

file filename to check extension
binwalk filename to check if hidden files are there
strings cat.jpg | grep picoCTF{* to check if that thing is present in file
hexdump -C cat.jpg gives content in hexadecimal format
echo cGljb0NURnt0aGVfbTN0YWRhdGFfMXNfbW9kaWZpZWR9 | base64 -d //does base 64 encoding



